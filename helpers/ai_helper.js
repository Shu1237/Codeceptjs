const { Helper } = require("codeceptjs");
const axios = require("axios");
require("dotenv").config();

class AIHelper extends Helper {
  constructor(config) {
    super(config);
    this.apiKey = process.env.OPENROUTER_API_KEY;
    this.apiUrl = "https://openrouter.ai/api/v1/chat/completions";
  }

  async suggestFix(errorMessage) {
    console.log("ü§ñ AI ƒëang ph√¢n t√≠ch l·ªói...");

    try {
      const response = await axios.post(
        `${this.apiUrl}?key=${this.apiKey}`,
        {
          prompt: `B·∫°n l√† chuy√™n gia ki·ªÉm th·ª≠ t·ª± ƒë·ªông. H√£y ph√¢n t√≠ch l·ªói sau v√† ƒë·ªÅ xu·∫•t c√°ch s·ª≠a ch·ªØa: ${errorMessage}`,
          temperature: 0.7,
          max_tokens: 200,
        }
      );

      return response.data.candidates[0].output || "Kh√¥ng c√≥ g·ª£i √Ω t·ª´ AI.";
    } catch (error) {
      console.error("‚ùå L·ªói khi g·ªçi API Gemma:", error.response?.data || error.message);
      return "Kh√¥ng th·ªÉ l·∫•y g·ª£i √Ω s·ª≠a l·ªói t·ª´ AI.";
    }
  }

  async retryTest(testFile) {
    console.log(`üîÑ Ch·∫°y l·∫°i test: ${testFile}`);
    const { exec } = require("child_process");

    exec(`npx codeceptjs run --grep "${testFile}"`, (error, stdout, stderr) => {
      if (error) {
        console.error(`‚ùå L·ªói khi ch·∫°y l·∫°i test: ${stderr}`);
      } else {
        console.log(`‚úÖ K·∫øt qu·∫£ test m·ªõi: ${stdout}`);
      }
    });
  }
}

module.exports = AIHelper;
